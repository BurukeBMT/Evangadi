Detailed Explanation of script.js (Rewritten Version)
=====================================================

This JavaScript file answers a series of DOM manipulation and event handling questions. The code is organized into four main sections, each corresponding to a specific question. Here is a detailed explanation of what each part does and how it works:

---

**Question 1: Selecting and Displaying an Element**
- The code selects the element with the id `sample1` using `getElementById`.
- It prints the entire element to the console, then prints its text content using `.textContent`.
- This demonstrates how to select a single element and access its content.

**Question 2: Working with Lists and Classes**
- Selects the `ul` with id `techCompanies` using both `getElementById` and `querySelector` to show two ways to select the same element.
- Counts the number of `li` elements inside `techCompanies` using `querySelectorAll`, and prints the count.
- Selects all elements with the class `red` using both `querySelectorAll` (returns a static NodeList) and `getElementsByClassName` (returns a live HTMLCollection), and prints both results.
- Creates a new `li` element for "Facebook", sets its text, and prints it.
- Adds the class `blue` to the new element and prints it again.
- Appends the new `li` after the last child ("Sony") in the list using `insertAdjacentElement`.
- Counts all elements with the class `blue` and displays the count inside the div with id `blueCompanies`.

**Question 3: Changing Background Color with Events**
- Defines two functions: `setBackground` sets the page background to light blue (`#99ecff`), and `clearBackground` resets it to default.
- Adds click event listeners to the elements with ids `yesBackground` and `noBackground` to trigger these functions when clicked.
- Demonstrates event handling and dynamic style changes.

**Question 4: Form Handling, Validation, and Output**
- The function `calculateSum` is attached to the form's submit event. It prevents the default form submission.
- Retrieves values from two input fields, converts them to numbers, and checks if both are valid using `isNaN`.
- If either value is not a number, displays an error message both in the console and under the form.
- If both are numbers, calculates the sum, prints it to the console, and displays it under the form in the `sum` div.
- Demonstrates form handling, input validation, and dynamic content updates.

---

**How the Code Works (Summary):**
- Uses DOM selection methods (`getElementById`, `querySelector`, `querySelectorAll`, `getElementsByClassName`) to interact with HTML elements.
- Manipulates the DOM by creating, updating, and appending elements.
- Handles user events (clicks, form submissions) to trigger JavaScript functions.
- Updates the page dynamically based on user actions and input, providing immediate feedback.
- Uses best practices for event handling, validation, and DOM updates.

This rewritten code provides a clear, organized demonstration of essential JavaScript DOM manipulation and event handling techniques, suitable for learning and practicing these core web development skills.
